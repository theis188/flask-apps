<!DOCTYPE html>
<html lang="en-us">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LA Neighborhood Ranker | Data science and beyond</title>
      <link href='http://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>
      <link href='http://fonts.googleapis.com/css?family=Lora' rel='stylesheet' type='text/css'>
      <link rel="stylesheet" type="text/css" href="http://www.matthewtheisen.com/css/bootstrap.css" />
      <link rel="stylesheet" type="text/css" href="http://www.matthewtheisen.com/css/font-awesome.css" />
      <link rel="stylesheet" type="text/css" href="http://www.matthewtheisen.com/css/style3.css" />
      <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.0-rc.3/dist/leaflet.css" />

      <script src="score_fn.js">
      </script>
<style>

#mapid { 
  height: 600px;
  width: "100%";
  position: relative;
}

.info {
  padding: 2px 8px;
  background: white;
  font-size: 1.2em;
  background: rgba(255,255,255,0.8);
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  border-radius: 5px;
}

.info h4 {
    margin: 0 0 5px;
    color: #777;
}

.ui-draggable, .ui-droppable {
  background-position: top;
}

#sortable1, #sortable2 {
  border: 3px solid #737373;
  width: 240px;
  min-height: 20px;
  list-style-type: none;
  padding: 5px 0 0 0;
  margin-left:auto;
  margin-right:auto;
  display: center;
}

#sortable1 li, #sortable2 li {
  border: 1px solid #eee;
  margin: 0 5px 5px 5px;
  padding: 5px;
  font-size: 1.2em;
  width: 225px;
  display: center;
  background-color: #EDEDED;
}

.centerBlock {
  display: table;
  margin: 0 auto;
}

th, td {
  border-bottom: 1px solid #ddd;
  border-top: none;
  border-right: none;
  border-left: none;
  padding: 5px;
}

table {
  font-size: 1em;
  border: none;
  display: center;

}

tr:nth-child(even) {background-color: #f2f2f2}

</style>

	<!-- Load fonts -->
  <script type="text/javascript" src="https://unpkg.com/leaflet@1.0.0-rc.3/dist/leaflet.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script src="../js/LA.js"></script>
  <script src="../js/data.js"></script>
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script type="text/javascript" src="../js/bootstrap.js"></script>
  <script type="text/javascript" src="../js/smooth-scroll.js"></script>
  <script type="text/javascript" src="score_fn.js"></script>  

  <script>
  
$( function() {
    $( "#sortable1, #sortable2" ).sortable({
      connectWith: ".connectedSortable",
      stop: function (event,ui) {submit()}
    })
  });

//.info box checks these values to see if a ranking has been chosen yet
var ranker =2;
var scorer =2;
//top n ranks to show in table
var topn = 10;
</script>

</head>

<body>
	<div class="jumbotron home home-fullscreen" id="home">
		<div class="container">
			<div class="header-info">
				<h1>Los Angeles</h1>
				<p>Find your neighborhood
				</p>
			</div>
		</div>
	</div>
<div class="container" data-html="true">
  <div class="row">
    <div class="col-md-12"><p><h2>Neighborhood Ranker</h2></p></div>
  </div>
  <div class="row">
     <div class="col-md-12"><p>The neighborhood ranker will rank neighborhoods according to your chosen criteria. Select your criteria by dragging the feature boxes into the rank column and clicking Submit. Make sure to rank-order your features in the order of importance.</p></div>
  </div>
  <div class="row">
      <div id = "mapid" class="col-sm-6"><p></p></div>
      <div class="col-sm-3"> 
        <div class="text-center">
          <p><h1>Features</h1></p>
          <ul id="sortable1" class="connectedSortable">
            <li name="prop-crime">Property Crime</li>
            <li name="viol-crime">Violent Crime</li>
            <li name="air-qual">Air Quality</li>
            <li name="school-qual">School Quality</li>
            <li name="pop-dens-h">Population Density (Hi)</li> 
            <li name="pop-dens-l">Population Density (Lo)</li> 
            <li name="rest-dens">Restaurant Density</li>
            <li name="buy-price">Price to Buy</li>
            <li name="rent-price">Price to Rent (2B)</li> 
            <li name="walk-score">Walkability</li>
          </ul>
        <p><h1>Rank</h1></p>
        <ul id="sortable2" class="connectedSortable"> </ul>
      </div>
    </div>
    <div class="row">
      <div class="text-center">
        <p><h2>Top Ranked</h2></p>
      </div>
      <div id="tablerow" class="col-sm-3"><p>To see top ranked, select features to rank by.</p>
      </div>
    </div>
  </div>
</div>

<br>

<br>

<script>
var mymap = L.map('mapid').setView([34, -118.5], 10);
L.tileLayer('https://api.mapbox.com/styles/v1/mtheisen/citei76iz005f2jpac8g7ilcl/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibXRoZWlzZW4iLCJhIjoiY2l0ZWk0NTBoMDVmMDJ0bXlyNmxzZ3RnMyJ9.fErHtcHVcTsHCLMPN1ZcQg', {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    maxZoom: 18,
    id: 'mtheisen',
    accessToken: 'pk.eyJ1IjoibXRoZWlzZW4iLCJhIjoiY2l0ZWk0NTBoMDVmMDJ0bXlyNmxzZ3RnMyJ9.fErHtcHVcTsHCLMPN1ZcQg'
}).addTo(mymap);

var geojson;

var highlightStyle = {
  weight: 5,
  color: '#666',
  dashArray: '',
  fillOpacity: 0.7
}

// ... our listeners
function highlightFeature(e) {
  var layer = e.target;

  layer.setStyle(highlightStyle);

  if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
      layer.bringToFront();
  }
  info.update(layer.feature.properties);
}

function resetHighlight(e) {
  geojson.resetStyle(e.target);
  info.update();
}
//leaflet calls this function for each neighborhood
function onEachFeature(feature, layer) {
  name = feature.properties.name
  layer._leaflet_id = name //we have to set this property so that getLayer() method works later--don't ask me
  layer.on({
    mouseover: highlightFeature,
    mouseout: resetHighlight,
  });
}
//call this every time we want to update the geojson
function updategeojson() {
  geojson=L.geoJson(neighbData, {style: style,
  onEachFeature: onEachFeature
  }).addTo(mymap);
}

function getColor(d) {
    
  return d > 90 ? '#007913' :
         d > 80 ? '#01980D' :
         d > 70 ? '#53A700' :
         d > 60 ? '#82AF00' :
         d > 50 ? '#C8E700' :
         d > 40 ? '#E7D200' :
         d > 30 ? '#FD8D3C' :
         d > 20 ? '#E79000' :
         d > 10 ? '#E76D00' :
                   '#CE3B00';
}

function style(feature) {
  return {
    fillColor: getColor(ranker==2 ? 70 : 100-ranker[feature.properties.name]/1.55),
    weight: 2,
    opacity: 1,
    color: 'gray',
    fillOpacity: 0.25
  };
}

//info box in corner of map
var info = L.control();

info.onAdd = function (mymap) {
    this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
    this.update();
    return this._div;
};

// method that we will use to update the control based on feature properties passed
info.update = function (props) {
    this._div.innerHTML = '<h4>Neighborhood Data</h4>' +  (props ?
        '<b>' + neighbname[props.name] + '</b><br/>' + getstr(props.name)
        : 'Hover over a neighborhood');
};
// get the features in the rank box
function getcol() {
  var ul = document.getElementById("sortable2");
  var items = ul.getElementsByTagName("li");
  var tosend = []
  for (var i = 0; i < items.length; ++i) {
    tosend.push(items[i].getAttribute("name") )
    }
  return tosend
}

//string to display in info box
function getstr(namey) {
  s = ''
  var tosend = getcol()
  if (ranker!=2) { //if ranker is not 2, then we have a ranking to use
    s = s.concat('<b>Rank: </b>')
    s = s.concat(ranker[namey])
    s = s.concat(' of 155')
    s = s.concat('<br/>')
    s = s.concat('<b>Score: </b>')
    s = s.concat(scorer[namey])
    s = s.concat(' out of 100')
    s = s.concat('<br/>')
    for (i=0;i<tosend.length;i++) { //Now add each feature thats in the ranks list
      s = s.concat('<b>')
      s = s.concat(stemlist[ tosend[i] ])
      s = s.concat(': </b>')
      s = s.concat(datalist [ tosend[i] ] [ namey ] )
      s = s.concat('<br/>') 
    }
  }
return s
}

//get the ranks of the items in the score array (ties return as same number)
function getranks(arr) {
  var sorted = arr.slice().sort(function(a,b){return b-a})
  var ranks = arr.slice().map(function(v){ return sorted.indexOf(v)+1 });
  return ranks
};
//get the top n ranks 
function firstnranks(rankarr) {
  var sorted = rankarr.slice().sort(function(a,b){return a-b})
  return sorted.slice(0,topn)
}

function mktbl(ranks) {
  s = ''
  s = s.concat(' <table> <tr value="toprow"> <th>Neighborhood</th> <th>Rank</th> <th>Score</th> </tr>')
  nranks = firstnranks(ranks)
  for (i=0;i<topn;i++) {
    rank = nranks[i]
    neighbind = (i>0 ? (nranks[i]==nranks[i-1] ? ranks.indexOf(rank,prevind+1) : ranks.indexOf(rank) ) : ranks.indexOf(rank) )
    prevind = neighbind
    plug = neighborder[neighbind]
    s = s.concat('<tr value="'+neighbind+'"> <td>')
    s = s.concat(neighbname[plug])
    s = s.concat('</td>  <td>')
    s = s.concat(rank)
    s = s.concat('</td>  <td>')
    s = s.concat(scorer[plug])
    s = s.concat('</td> </tr>')
  }
  s=s.concat('</table>')
  return s
}

function bindrows() {
$('#tablerow tr').on('mouseover', function(e){
  plugnum = $(e.target).parent()[0].attributes.value.value;
  if (plugnum!='toprow') {
    hovered_id = neighborder[plugnum]
    layer = geojson.getLayer(hovered_id);
    layer.setStyle(highlightStyle);
    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
      layer.bringToFront();
    }
  }
  info.update(layer.feature.properties);
}).on('mouseout', function(e){
    geojson.resetStyle(layer);
    info.update();
  });
}

function submit() {
  var tosend = getcol()

  console.log(tosend)

  data = getScores(tosend)
  scorer = {}
  ranker = {}
  ranks = getranks(data)

  for (i=0;i<data.length;i++) {
    scorer[ neighborder[i] ] = data[i]
    ranker[ neighborder[i] ] = ranks[i]
    }

  geojson.clearLayers()
  updategeojson()

  document.getElementById("tablerow").innerHTML = mktbl(ranks)
  bindrows()
}

//add the infor box
info.addTo(mymap);
//initialize neighborhoods
updategeojson()

</script>

<div class="container" data-html="true">
  <div id="clickme" class="row">
    <div class="col-sm-12">
      <p><h4><u>Need help? Click here</u></h4></p>
    </div>
  </div>

  <div id="help" class="row">
    <div class="col-sm-12">
      <div class="centerBlock">
        <img class="img-responsive" src="http://www.matthewtheisen.com/img/help.png"> </img>
      </div>
    </div>
  </div>
</div>

<script>

$("#help").hide();

$( "#clickme" ).click(function() {
  $( "#help" ).slideToggle( "slow", function() {
    // Animation complete.
  });
});

</script>

<br>

<br>

<div class="container" data-html="true">
  <div class="row">
    <div class="col-md-12"><p>Data for this project comes from the <a href="http://www.mappingla.com">LA Times</a>, <a href="http://www.yelp.com">Yelp</a>, <a href="https://developers.google.com/maps/documentation/geocoding/start">Google Geocoding</a>, <a href ="http://www.zillow.com/howto/api/APIOverview.htm">Zillow</a>, <a href = "http://www.greatschools.org/">GreatSchools</a>, <a href="http://www.rent.com">Rent.com</a>, <a href="http://www.padmapper.com">Padmapper</a>, <a href="https://www.neighborhoodscout.com">NeighborhoodScout</a>, <a href="http://www.walkscore.com">Walkscore</a> and <a href="http://www3.aqmd.gov/webappl/gisaqi2/VEMap3D.aspx">SCAQMD</a>. </p>

    <p>Mapping is accomplished with <a href="http://www.leafletjs.com">leaflet.js</a> and <a href="http://www.mapbox.com">Mapbox</a>. Rank is calculated with JavaScript.</p>

    <p>Learn more about the <a href="https://beyonddatascience.wordpress.com/2016/10/06/ranking-neighborhoods-in-los-angeles/">ranking algorithm</a>.</p>
    </div>

  </div>
</div>

</body>
</html>
